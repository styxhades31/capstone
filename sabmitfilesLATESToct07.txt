<?php
session_start();

// Include database connection
require_once 'dbConnCode.php';  // This file contains the $conn variable for mysqli
require 'vendor/autoload.php'; // Load PHPMailer

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// Start CSRF token generation if not already set
if (empty($_SESSION['csrf_token'])) {
    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));
}

// Check if the user is logged in and is a researcher
if (!isset($_SESSION['user_id']) || $_SESSION['role'] !== 'Researcher') {
    header("Location: login.php");
    exit();
}

// Get user_id from session
$user_id = $_SESSION['user_id'];  // Get the current user's ID

// Fetch user email from the database
$stmt = $conn->prepare("SELECT email FROM users WHERE id = ?");
$stmt->bind_param("i", $user_id);
$stmt->execute();
$stmt->bind_result($email);
$stmt->fetch();
$stmt->close();



// Handle form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
     // Rate limiting
     if (isset($_SESSION['last_submission_time']) && (time() - $_SESSION['last_submission_time']) < 10) {
        // Redirect to researcherHome.php if submission is too quick
        header("Location: researcherHome.php");
        exit();
    }
    $_SESSION['last_submission_time'] = time(); // Update the last submission time
    

    // Sanitize inputs
    $study_protocol_title = filter_input(INPUT_POST, 'study_protocol_title', FILTER_SANITIZE_STRING);
    $adviser_name = filter_input(INPUT_POST, 'adviser_name', FILTER_SANITIZE_STRING);
    $college_dropdown = filter_input(INPUT_POST, 'college_dropdown', FILTER_SANITIZE_STRING);
    $other_college = filter_input(INPUT_POST, 'other_college', FILTER_SANITIZE_STRING);
    $research_category_dropdown = filter_input(INPUT_POST, 'research_category_dropdown', FILTER_SANITIZE_STRING);
    $other_category = filter_input(INPUT_POST, 'other_category', FILTER_SANITIZE_STRING);

    // Get the college value (use the "Other" field if applicable)
    $college = $college_dropdown === 'Other' ? $other_college . ' - Brown' : $college_dropdown;

    // Get the research category value (use the "Other" field if applicable)
    $research_category = $research_category_dropdown === 'Other' ? $other_category : $research_category_dropdown;

    // Insert into Researcher_title_informations
    $stmt = $conn->prepare("INSERT INTO Researcher_title_informations (user_id, study_protocol_title, college, research_category, adviser_name) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("issss", $user_id, $study_protocol_title, $college, $research_category, $adviser_name);
    $stmt->execute();

    // Get the ID of the inserted researcher title information
    $researcher_title_id = $conn->insert_id;

    // Handle insertion of researcher names (including co-researchers)
    $researcher_first_names = $_POST['researcher_first_name'];
    $researcher_last_names = $_POST['researcher_last_name'];
    $researcher_middle_initials = $_POST['researcher_middle_initial'];
    $researcher_suffixes = $_POST['researcher_suffix'];

    for ($i = 0; $i < count($researcher_first_names); $i++) {
        $first_name = filter_var($researcher_first_names[$i], FILTER_SANITIZE_STRING);
        $last_name = filter_var($researcher_last_names[$i], FILTER_SANITIZE_STRING);
        $middle_initial = !empty($researcher_middle_initials[$i]) ? filter_var($researcher_middle_initials[$i], FILTER_SANITIZE_STRING) : null;
        $suffix = !empty($researcher_suffixes[$i]) ? filter_var($researcher_suffixes[$i], FILTER_SANITIZE_STRING) : null;

        // Insert into Researcher_involved
        $stmt = $conn->prepare("INSERT INTO Researcher_involved (researcher_title_id, first_name, last_name, middle_initial, suffix) VALUES (?, ?, ?, ?, ?)");
        $stmt->bind_param("issss", $researcher_title_id, $first_name, $last_name, $middle_initial, $suffix);
        $stmt->execute();
    }

    // Handle file uploads
    $upload_dir = 'uploads/';  // Directory where files will be saved
    $files = ['application_form', 'research_protocol', 'technical_review', 'data_instruments', 'informed_consent', 'cv', 'study_protocol_form', 'informed_consent_form', 'exempt_review_form'];

    foreach ($files as $file) {
        if (!empty($_FILES[$file]['name'])) {
            // Check file size (20 MB = 20 * 1024 * 1024 bytes)
            if ($_FILES[$file]['size'] > 20 * 1024 * 1024) {
                die("Error: The file size for $file exceeds the maximum limit of 20 MB.");
            }

            $file_name = basename($_FILES[$file]['name']);
            $file_path = $upload_dir . $file_name;

            if (move_uploaded_file($_FILES[$file]['tmp_name'], $file_path)) {
                // Insert into the database using mysqli
                $stmt = $conn->prepare("INSERT INTO researcher_files (user_id, file_type, filename, file_path) VALUES (?, ?, ?, ?)");
                $file_type = ucfirst(str_replace('_', ' ', $file));  // Format the file type
                $stmt->bind_param("isss", $user_id, $file_type, $file_name, $file_path);
                $stmt->execute();
            }
        }
    }

    // Handle other files (additional documents)
    if (!empty($_FILES['other_files']['name'][0])) {  // Check if at least one other file is uploaded
        foreach ($_FILES['other_files']['name'] as $key => $other_file_name) {
            if (!empty($other_file_name)) {
                // Check file size (20 MB = 20 * 1024 * 1024 bytes)
                if ($_FILES['other_files']['size'][$key] > 20 * 1024 * 1024) {
                    die("Error: The file size for $other_file_name exceeds the maximum limit of 20 MB.");
                }

                $file_path = $upload_dir . basename($other_file_name);
                if (move_uploaded_file($_FILES['other_files']['tmp_name'][$key], $file_path)) {
                    $stmt = $conn->prepare("INSERT INTO researcher_files (user_id, file_type, filename, file_path) VALUES (?, 'Other', ?, ?)");
                    $stmt->bind_param("iss", $user_id, $other_file_name, $file_path);
                    $stmt->execute();
                }
            }
        }
    }

    // After successful insertions into the researcher and file tables
    // Handle automatic appointment scheduling

    // Get the current date and add 2 days to set the minimum appointment date
    $start_date = date('Y-m-d', strtotime('+2 days'));

    // Function to check if the date is valid (Monday to Saturday)
    function isValidAppointmentDate($date) {
        $day_of_week = date('N', strtotime($date)); // 1 = Monday, 7 = Sunday
        return $day_of_week >= 1 && $day_of_week <= 6; // Monday to Saturday
    }

    // Loop through the dates until an available one is found with less than 20 appointments
    $appointment_date = $start_date;
    while (true) {
        // Check if the date is a valid appointment day (Monday to Saturday)
        if (isValidAppointmentDate($appointment_date)) {
            // Query to count the number of appointments for this date
            $stmt = $conn->prepare("SELECT COUNT(*) FROM appointments WHERE appointment_date = ?");
            $stmt->bind_param("s", $appointment_date);
            $stmt->execute();
            $stmt->bind_result($appointment_count);
            $stmt->fetch();
            $stmt->close();

            // If the number of appointments is less than 20, assign this date
            if ($appointment_count < 20) {
                // Insert the appointment for the user
                $stmt = $conn->prepare("INSERT INTO appointments (user_id, appointment_date) VALUES (?, ?)");
                $stmt->bind_param("is", $user_id, $appointment_date);
                $stmt->execute();
                $stmt->close();
                
                // Appointment successfully assigned
                break;
            }
        }
        
        // Move to the next day
        $appointment_date = date('Y-m-d', strtotime($appointment_date . ' +1 day'));
    }

    // Send appointment confirmation email
    $mail = new PHPMailer(true);
    try {
        // Server settings (ensure this is set up correctly)
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com'; // Replace with your email host
        $mail->SMTPAuth = true;
        $mail->Username = 'westkiria@gmail.com'; // Replace with your email
        $mail->Password = 'qpktvouqahvubayd'; // Replace with your email password
        $mail->SMTPSecure = 'tls';
        $mail->Port = 587;

        // Recipients
        $mail->setFrom('westkiria@gmail.com', 'West Kiria');
        $mail->addAddress($email); // Add the recipient's email

        // Content
        $mail->isHTML(true);
        $mail->Subject = 'Appointment Confirmation';
        $mail->Body    = "Your appointment has been scheduled for <strong>$appointment_date</strong>.";
        
        $mail->send();
    } catch (Exception $e) {
        echo "Email could not be sent. Mailer Error: {$mail->ErrorInfo}";
    }

$success = true; // Set success variable to true
}
?>




<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Submit Research Files</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <style>
        .other-documents-container {
            display: flex;
            align-items: center;
        }
        .other-documents-container input[type="file"] {
            margin-right: 10px;
        }
    </style>
    <script>
        function addOtherFile() {
            const container = document.getElementById('other-files-container');
            const div = document.createElement('div');
            div.innerHTML = '<input type="file" name="other_files[]" required>';
            container.appendChild(div);
        }
        // Adds fields for co-researchers (same structure as main researcher)
        function addCoResearcher() {
            const container = document.getElementById('co-researcher-container');
            const div = document.createElement('div');
            div.innerHTML = `
                <label>Co-researcher Name</label>
                <input type="text" name="researcher_first_name[]" placeholder="First Name" required>
                <input type="text" name="researcher_last_name[]" placeholder="Last Name" required>
                <input type="text" name="researcher_middle_initial[]" placeholder="M.I." maxlength="2">
                <input type="text" name="researcher_suffix[]" placeholder="Suffix (optional)"><br>
            `;
            container.appendChild(div);
        }
        function toggleOtherInput(selectElement, otherInputId) {
    var otherInput = document.getElementById(otherInputId);
    if (selectElement.value === 'Other') {
        otherInput.style.display = 'inline';
    } else {
        otherInput.style.display = 'none';
        otherInput.value = '';  // Reset the input field when not used
    }
}
    </script>
</head>
<body>
    <h2>Submit Research Ethics Review Documents</h2>
    <form method="POST" enctype="multipart/form-data">
    <ul>
    <li> Application Form for Research Ethics Review - WMSU-REOC-FR-001 (with researcher/s signature in pdf file)
        <input type="file" name="application_form" accept=".pdf" required>
    </li>
    <li> Research Protocol/Proposal (with page and line number in pdf file)
        <input type="file" name="research_protocol" accept=".pdf" required>
    </li>
    <li> Technical Review Clearance - (pdf file)
        <input type="file" name="technical_review" accept=".pdf" required>
    </li>
    <li> Data collection instrument/s (with page and line number in pdf file)
        <input type="file" name="data_instruments" accept=".pdf" required>
    </li>
    <li> Informed Consent/Assent (with page and line number in pdf file)
        <input type="file" name="informed_consent" accept=".pdf" required>
    </li>
    <li> Curriculum Vitae of Researcher/s (pdf file)
        <input type="file" name="cv" accept=".pdf" required>
    </li>
    <li> Completed Study Protocol Assessment Form - WMSU-REOC-FR-004 (fill up the required details with asterisks in word file)
        <input type="file" name="study_protocol_form" accept=".doc,.docx" required>
    </li>
    <li> Completed Informed Consent Assessment Form - WMSU-REOC-FR-005 (fill up the required details with asterisks in word file)
        <input type="file" name="informed_consent_form" accept=".doc,.docx" required>
    </li>
    <li> Completed Exempt Review Assessment Form - WMSU-REOC-FR-006 (fill up the required details with asterisks in word file)
        <input type="file" name="exempt_review_form" accept=".doc,.docx" required>
    </li>
    <li class="other-documents-container">Other documents (NCIP Clearance, MOA, MOU, etc. in pdf file)
    <div id="other-files-container">
        <input type="file" name="other_files[]" accept=".pdf">
        <button type="button" onclick="addOtherFile()">Add More</button>

    </ul>
    <label>Study Protocol Title</label>
        <input type="text" name="study_protocol_title" required><br>

        <label>Researcher Name</label>
        <input type="text" name="researcher_first_name[]" placeholder="First Name" required>
        <input type="text" name="researcher_last_name[]" placeholder="Last Name" required>
        <input type="text" name="researcher_middle_initial[]" placeholder="M.I." maxlength="2">
        <input type="text" name="researcher_suffix[]" placeholder="Suffix (optional)"><br>

        <label>Co-researchers</label>
        <div id="co-researcher-container"></div>
        <button type="button" onclick="addCoResearcher()">Add Co-researcher</button><br>

        <label>College/Institution</label>
        <select name="college_dropdown" onchange="toggleOtherInput(this, 'other_college_input')" required>
            <option value="College of Agriculture - Green">College of Agriculture - Green</option>
            <option value="College of Architecture - Maroon">College of Architecture - Maroon</option>
            <option value="College of Asian and Islamic Studies - Violet">College of Asian and Islamic Studies - Violet</option>
            <option value="College of Computing Studies - Maroon">College of Computing Studies - Maroon</option>
            <option value="College of Criminal Justice Education - Black">College of Criminal Justice Education - Black</option>
            <option value="College of Engineering - Yellow">College of Engineering - Yellow</option>
            <option value="College of Forestry and Environmental Studies - Green">College of Forestry and Environmental Studies - Green</option>
            <option value="College of Home Economics - Violet">College of Home Economics - Violet</option>
            <option value="College of Law - Black">College of Law - Black</option>
            <option value="College of Liberal Arts - Red">College of Liberal Arts - Red</option>
            <option value="College of Medicine - Pink">College of Medicine - Pink</option>
            <option value="College of Nursing - Pink">College of Nursing - Pink</option>
            <option value="College of Public Administration and Development Studies - Orange">College of Public Administration and Development Studies - Orange</option>
            <option value="College of Science and Mathematics - Orange">College of Science and Mathematics - Orange</option>
            <option value="College of Social Work and Community Development - Orange">College of Social Work and Community Development - Orange</option>
            <option value="College of Sports Science and Physical Education - Red">College of Sports Science and Physical Education - Red</option>
            <option value="College of Teacher Education - Blue">College of Teacher Education - Blue</option>
            <option value="External Studies Unit - Brown">External Studies Unit - Brown</option>
            <option value="Institutionally Funded Research - Brown">Institutionally Funded Research - Brown</option>
            <option value="Other Institution - Brown">Other Institution - Brown</option>
            <option value="Other">Other (Please specify)</option>
        </select>
        <input type="text" id="other_college_input" name="other_college" placeholder="Specify Other College" style="display:none;"><br>

        <label>Research Category and Fee</label>
        <select name="research_category_dropdown" onchange="toggleOtherInput(this, 'other_category_input')" required>
            <option value="WMSU Undergraduate Thesis - 300.00">WMSU Undergraduate Thesis - 300.00</option>
            <option value="WMSU Master's Thesis - 700.00">WMSU Master's Thesis - 700.00</option>
            <option value="WMSU Dissertation - 1,500.00">WMSU Dissertation - 1,500.00</option>
            <option value="WMSU Institutionally Funded Research - 2,000.00">WMSU Institutionally Funded Research - 2,000.00</option>
            <option value="Externally Funded Research / Other Institution - 3,000.00">Externally Funded Research / Other Institution - 3,000.00</option>
            <option value="Other">Other (Please specify)</option>
        </select>
        <input type="text" id="other_category_input" name="other_category" placeholder="Specify Other Category" style="display:none;"><br>


        <label>Name of Adviser</label>
        <input type="text" name="adviser_name" required><br>
    </div>
    </li>
        <button type="submit">Submit</button>
    </form>

    <script>
    // Check if the PHP success variable is true
    var success = <?php echo json_encode($success); ?>; // Encode the PHP variable to JavaScript
    if (success) {
    Swal.fire({
        title: 'Success!',
        text: 'Files uploaded successfully. You will be redirected to the homepage shortly. Please check your email for confirmation.',
        icon: 'success',
        timer: 3000, // Auto close after 3 seconds
        showConfirmButton: false
    }).then(() => {
        window.location.href = 'researcherHome.php'; // Redirect after the alert
    });
}
</script>
</body>
</html>
