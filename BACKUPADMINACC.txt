<?php
session_start();
require 'dbConnCode.php'; // Database connection file

$error = ''; // To store error messages
$success = ''; // To store success messages

// Check if the role is provided in the URL
if (isset($_GET['role'])) {
    $role = htmlspecialchars($_GET['role']); // Sanitize the role parameter
} else {
    $error = 'Role not specified'; // Set error if no role is provided
}

// Check if the form is submitted
if ($_SERVER["REQUEST_METHOD"] === "POST") {
    // Retrieve and sanitize inputs
    $password = trim($_POST['password']);
    $confirmPassword = trim($_POST['confirmPassword']);
    $verificationCode = trim($_POST['verificationCode']);

    // Check if email exists in the session (from previous page)
    if (!isset($_SESSION['email'])) {
        $error = 'No email found in session. Please restart the process.';
    } else {
        $email = $_SESSION['email'];

        // Validate password and confirmation match
        if ($password !== $confirmPassword) {
            $error = 'Passwords do not match.';
        } elseif (strlen($password) < 6) {
            $error = 'Password must be at least 6 characters long.';
        } else {
            // Check if the verification code matches the one in the database
            $stmt = $conn->prepare("SELECT verification_code FROM users WHERE temporaryemailholder = ?");
            $stmt->bind_param("s", $email); // Bind the email parameter
            $stmt->execute();
            $result = $stmt->get_result(); // Get the result set

            if ($result && $result->num_rows > 0) {
                $row = $result->fetch_assoc(); // Fetch the row
                if ($row['verification_code'] === $verificationCode) {
                    // Hash the password
                    $hashedPassword = password_hash($password, PASSWORD_DEFAULT);

                   
                   // Update the user record and set the password, email, and verification_code to NULL
                   $updateStmt = $conn->prepare("UPDATE users SET password = ?, email = ?, verification_code = NULL, temporaryemailholder = NULL WHERE temporaryemailholder = ?");
                   $updateStmt->bind_param("sss", $hashedPassword, $email, $email); // Bind the password, email, and temporary email


                    if ($updateStmt->execute()) {
                        // Get the user ID using the email
                        $userIdStmt = $conn->prepare("SELECT id FROM users WHERE email = ?");
                        $userIdStmt->bind_param("s", $email);
                        $userIdStmt->execute();
                        $userIdResult = $userIdStmt->get_result();

                        if ($userIdResult && $userIdResult->num_rows > 0) {
                            $userRow = $userIdResult->fetch_assoc();
                            $userId = $userRow['id']; // Get the user ID

                            // Determine role_id based on role name
                            $roleIdStmt = $conn->prepare("SELECT id FROM roles WHERE name = ?");
                            $roleIdStmt->bind_param("s", $role);
                            $roleIdStmt->execute();
                            $roleIdResult = $roleIdStmt->get_result();

                            if ($roleIdResult && $roleIdResult->num_rows > 0) {
                                $roleRow = $roleIdResult->fetch_assoc();
                                $roleId = $roleRow['id']; // Get the role ID

                                // Insert into user_roles table
                                $insertRoleStmt = $conn->prepare("INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)");
                                $insertRoleStmt->bind_param("ii", $userId, $roleId); // Bind user ID and role ID
                                if ($insertRoleStmt->execute()) {
                                    $success = 'Account created successfully. You can now log in.';
                                    unset($_SESSION['email']); // Optionally unset session
                                } else {
                                    $error = 'Error assigning role. Please try again.';
                                }
                            } else {
                                $error = 'Invalid role specified.';
                            }
                        } else {
                            $error = 'Error retrieving user ID. Please try again.';
                        }
                    } else {
                        $error = 'Error creating account. Please try again.';
                    }
                } else {
                    $error = 'Invalid verification code.';
                }
            } else {
                $error = 'Invalid email or verification code.';
            }
        }
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Account Creation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 300px;
        }
        button {
            padding: 10px 20px;
            margin-top: 10px;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .error {
            color: red;
        }
        .success {
            color: green;
        }
    </style>
</head>
<body>

<div class="container">
    <h2>Create Admin Account</h2>

    <?php if ($error): ?>
        <div class="error"><?php echo htmlspecialchars($error); ?></div>
    <?php endif; ?>

    <?php if ($success): ?>
        <div class="success"><?php echo htmlspecialchars($success); ?></div>
    <?php endif; ?>

    <form method="POST" action="">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required placeholder="Enter your password">

        <label for="confirmPassword">Confirm Password:</label>
        <input type="password" id="confirmPassword" name="confirmPassword" required placeholder="Re-enter your password">

        <label for="verificationCode">Verification Code:</label>
        <input type="text" id="verificationCode" name="verificationCode" required placeholder="Enter the code sent to your email">

        <button type="submit">Create Account</button>
    </form>
</div>

</body>
</html>
